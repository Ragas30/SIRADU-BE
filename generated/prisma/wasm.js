
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  role: 'role',
  name: 'name',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NurseDetailScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  phone: 'phone',
  address: 'address',
  nurseStatus: 'nurseStatus'
};

exports.Prisma.DailyActivityScalarFieldEnum = {
  id: 'id',
  nurseId: 'nurseId',
  date: 'date',
  shiftType: 'shiftType'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  nik: 'nik',
  birthDate: 'birthDate',
  bedNumber: 'bedNumber',
  gender: 'gender',
  bradenQ: 'bradenQ',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReposisiHistoryScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  position: 'position',
  nurseId: 'nurseId',
  bradenQ: 'bradenQ',
  Time: 'Time',
  foto: 'foto'
};

exports.Prisma.PatientHandleScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  nurseId: 'nurseId',
  bradenQ: 'bradenQ',
  foto: 'foto',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.NurseStatus = exports.$Enums.NurseStatus = {
  ON_SHIFT: 'ON_SHIFT',
  OFF_SHIFT: 'OFF_SHIFT'
};

exports.Role = exports.$Enums.Role = {
  KEPALA_PERAWAT: 'KEPALA_PERAWAT',
  PERAWAT: 'PERAWAT'
};

exports.Gender = exports.$Enums.Gender = {
  LAKI_LAKI: 'LAKI_LAKI',
  PEREMPUAN: 'PEREMPUAN'
};

exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  NON_ACTIVE: 'NON_ACTIVE'
};

exports.Resiko = exports.$Enums.Resiko = {
  TINGGI: 'TINGGI',
  SEDANG: 'SEDANG',
  RENDAH: 'RENDAH',
  SANGAT_TINGGI: 'SANGAT_TINGGI'
};

exports.Prisma.ModelName = {
  User: 'User',
  NurseDetail: 'NurseDetail',
  DailyActivity: 'DailyActivity',
  Patient: 'Patient',
  ReposisiHistory: 'ReposisiHistory',
  PatientHandle: 'PatientHandle'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Kerjo\\SIRADU\\SIRADU BE\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Kerjo\\SIRADU\\SIRADU BE\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              String            @id @default(cuid())\n  role            Role\n  name            String\n  email           String            @unique\n  password        String\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n  reposisiHistory ReposisiHistory[]\n  nurseDetail     NurseDetail[]\n  DailyActivity   DailyActivity[]\n  PatientHandle   PatientHandle[]\n}\n\nmodel NurseDetail {\n  id          String      @id @default(cuid())\n  userId      String      @unique\n  phone       String\n  address     String\n  nurseStatus NurseStatus\n  user        User        @relation(fields: [userId], references: [id])\n}\n\nmodel DailyActivity {\n  id        String   @id @default(cuid())\n  nurseId   String\n  date      DateTime @default(now())\n  shiftType String?\n  nurse     User     @relation(fields: [nurseId], references: [id])\n\n  @@unique([nurseId, date])\n}\n\nenum NurseStatus {\n  ON_SHIFT\n  OFF_SHIFT\n}\n\nenum Role {\n  KEPALA_PERAWAT\n  PERAWAT\n}\n\nmodel Patient {\n  id            String            @id @default(cuid())\n  name          String\n  nik           String            @unique\n  birthDate     DateTime\n  bedNumber     Int\n  gender        Gender\n  bradenQ       Int\n  status        Status\n  createdAt     DateTime          @default(now())\n  updatedAt     DateTime          @updatedAt\n  reposisi      ReposisiHistory[]\n  PatientHandle PatientHandle[]\n}\n\nenum Gender {\n  LAKI_LAKI\n  PEREMPUAN\n}\n\nenum Status {\n  ACTIVE\n  NON_ACTIVE\n}\n\nenum Resiko {\n  TINGGI\n  SEDANG\n  RENDAH\n  SANGAT_TINGGI\n}\n\nmodel ReposisiHistory {\n  id        String   @id @default(cuid())\n  patientId String\n  position  String\n  nurseId   String\n  bradenQ   Int\n  Time      DateTime @default(now())\n  foto      String?\n  patient   Patient  @relation(fields: [patientId], references: [id])\n  nurse     User     @relation(fields: [nurseId], references: [id])\n}\n\nmodel PatientHandle {\n  id        String   @id @default(cuid())\n  patientId String\n  nurseId   String\n  patient   Patient  @relation(fields: [patientId], references: [id])\n  nurse     User     @relation(fields: [nurseId], references: [id])\n  bradenQ   Int\n  foto      String?\n  status    Status   @default(ACTIVE)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([patientId, nurseId])\n}\n",
  "inlineSchemaHash": "26498dea191106c357cdad228bd35e5f74a68bf11e236c68353afe202725cf8a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reposisiHistory\",\"kind\":\"object\",\"type\":\"ReposisiHistory\",\"relationName\":\"ReposisiHistoryToUser\"},{\"name\":\"nurseDetail\",\"kind\":\"object\",\"type\":\"NurseDetail\",\"relationName\":\"NurseDetailToUser\"},{\"name\":\"DailyActivity\",\"kind\":\"object\",\"type\":\"DailyActivity\",\"relationName\":\"DailyActivityToUser\"},{\"name\":\"PatientHandle\",\"kind\":\"object\",\"type\":\"PatientHandle\",\"relationName\":\"PatientHandleToUser\"}],\"dbName\":null},\"NurseDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nurseStatus\",\"kind\":\"enum\",\"type\":\"NurseStatus\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NurseDetailToUser\"}],\"dbName\":null},\"DailyActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nurseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shiftType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nurse\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DailyActivityToUser\"}],\"dbName\":null},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nik\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bedNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"bradenQ\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reposisi\",\"kind\":\"object\",\"type\":\"ReposisiHistory\",\"relationName\":\"PatientToReposisiHistory\"},{\"name\":\"PatientHandle\",\"kind\":\"object\",\"type\":\"PatientHandle\",\"relationName\":\"PatientToPatientHandle\"}],\"dbName\":null},\"ReposisiHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nurseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bradenQ\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Time\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToReposisiHistory\"},{\"name\":\"nurse\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReposisiHistoryToUser\"}],\"dbName\":null},\"PatientHandle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nurseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPatientHandle\"},{\"name\":\"nurse\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientHandleToUser\"},{\"name\":\"bradenQ\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

